[{"/home/admin1/Desktop/my-app/src/components/Timeline/Timeline.js":"1","/home/admin1/Desktop/my-app/src/components/Profile/Profile.js":"2","/home/admin1/Desktop/my-app/src/App.js":"3","/home/admin1/Desktop/my-app/src/components/Footer/Footer.js":"4","/home/admin1/Desktop/my-app/src/components/Button/Button.js":"5","/home/admin1/Desktop/my-app/src/pages/Resume/Resume.js":"6","/home/admin1/Desktop/my-app/src/pages/Portfolio/Portfolio.js":"7","/home/admin1/Desktop/my-app/src/index.js":"8","/home/admin1/Desktop/my-app/src/pages/Contact/Contact.js":"9","/home/admin1/Desktop/my-app/src/pages/Home/index.js":"10","/home/admin1/Desktop/my-app/src/utils/resumeData.js":"11"},{"size":2994,"mtime":1614086965144,"results":"12","hashOfConfig":"13"},{"size":3634,"mtime":1614085963604,"results":"14","hashOfConfig":"13"},{"size":1569,"mtime":1613491651715,"results":"15","hashOfConfig":"13"},{"size":1417,"mtime":1613463224062,"results":"16","hashOfConfig":"13"},{"size":786,"mtime":1613463224062,"results":"17","hashOfConfig":"13"},{"size":7337,"mtime":1613921670803,"results":"18","hashOfConfig":"13"},{"size":4760,"mtime":1614316842919,"results":"19","hashOfConfig":"13"},{"size":506,"mtime":1613463224062,"results":"20","hashOfConfig":"13"},{"size":3503,"mtime":1613496424052,"results":"21","hashOfConfig":"13"},{"size":126,"mtime":1613463224062,"results":"22","hashOfConfig":"13"},{"size":5368,"mtime":1614314843932,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pdghtd",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/admin1/Desktop/my-app/src/components/Timeline/Timeline.js",[],"/home/admin1/Desktop/my-app/src/components/Profile/Profile.js",["51"],"import React from 'react';\n\n\nimport CustomTimeline, {CustomTimelineSeparator} from '../Timeline/Timeline';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\n\nimport resumeData from '../../utils/resumeData';\nimport logo from \"../../assets/images/displayimage.jpeg\"\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\n\nimport CustomButton from '../Button/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Typography} from '@material-ui/core';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  timelineItem_text: {\n    font: '11px',\n    color: 'grey',\n  },\n\n  timeline_content: {\n    color: 'black'\n  },\n\n  // profile_information: {\n  //   display: 'flex' \n  // },\n\n  name: {\n    textTransform: 'uppercase',\n    textSizeAdjust: '17px',\n    fontWeight: 'bold'\n  },\n\n  button_container: {\n    width: \"100%\",\n    display: 'flex !important', \n    justifyContent: 'center',\n    marginTop: '20px',\n    // backgroundColor: '#fff59d',\n    fontSize: '12px',\n    fontWeight: '500',\n    borderRadius: '100px',\n    padding: \"3px 12px\",\n    lineHeight: '35px',\n    minWidth: '100px',\n    outline: 'none'\n\n  },\n\n  profile_image: {\n    marginTop: '6px',\n    clipPath: 'polygon(0 0%, 100% 0, 100% 94%, 0% 100%)',\n    webkitClipPath: 'polygon(0 0%, 100% 0, 100% 94%, 0% 100%)',\n    width: '100%',\n    height: 'fit-content'\n    \n  },\n\n  profile_information: {\n    position: 'relative',\n    top: '-40px',\n    left: '14px'\n\n  },\n\n\n}))\n\n\n// import './Profile.css';\n\nconst CustomTimelineItem = ({title, text, link, endComponent}) => {\n\n  const classes = useStyles();\n\n  return (\n    <TimelineItem>\n      <CustomTimelineSeparator endComponent={endComponent}/>\n      <TimelineContent>\n        {link ? (\n        <Typography >\n          <span>{title}:</span>\n          <a href={link} target='blank'>{text}\n          </a>\n        </Typography>) : (\n        <Typography >\n          <span>{title}:</span>{text}\n          </Typography>\n        )}\n      </TimelineContent>\n\n      {/* <CustomTimelineSeparator /> */}\n    </TimelineItem>\n\n  )};\n\n\nconst Profile = () => {\n\n  const classes = useStyles();\n  \n  return (\n    <div className=\"profile container_shadow\">\n      <div className=\"profile_name\">\n        <Typography className={classes.name}>{resumeData.name}</Typography>\n        <Typography className=\"title\">{resumeData.title}</Typography>\n      </div> \n\n      <figure className={classes.profile_image}>\n        <img src={logo} alt=\"pic\" className={classes.profile_image}/>\n      </figure>\n\n      <div className={classes.profile_information}>\n        <CustomTimeline icon={<PersonOutlineIcon />} >\n           <CustomTimelineItem title='name' text={resumeData.name} />\n           <CustomTimelineItem title='title' text={resumeData.title} />\n           <CustomTimelineItem title='email' text={resumeData.email} />\n                        \n        \n          {Object.keys(resumeData.socials).map((key,idx) => (\n            <CustomTimelineItem\n            key={idx}\n             title={key} \n             endComponent={idx === Object.keys(resumeData.socials).length - 1}\n             text={resumeData.socials[key].text} \n             link={resumeData.socials[key].link} />\n          ))}\n        \n        </CustomTimeline>\n        <br/>  \n        \n      </div>\n      <div className={classes.button_container}>\n          {/* <button>my Button</button> */}\n        <CustomButton text={\"Info\"} icon={<ArrowDownwardIcon />} />\n      </div>\n      \n    </div>  \n    \n  );\n};\n\nexport default Profile;",["52","53"],"/home/admin1/Desktop/my-app/src/App.js",[],"/home/admin1/Desktop/my-app/src/components/Footer/Footer.js",[],"/home/admin1/Desktop/my-app/src/components/Button/Button.js",[],"/home/admin1/Desktop/my-app/src/pages/Resume/Resume.js",["54"],"import { Grid, Icon, Paper, Typography, TextField } from \"@material-ui/core\";\nimport React from \"react\";\n\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport CustomTimeline, {CustomTimelineSeparator} from '../../components/Timeline/Timeline';\nimport WorkIcon from '@material-ui/icons/Work';\nimport SchoolICon from '@material-ui/icons/School';\n// import CustomButton from \"../../components/Button/Button\";\n\nimport resumeData from \"../../utils/resumeData\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\n\nconst useStyles = makeStyles((theme) => ({\n  // About me\n  aboutmetext: {\n    // fontSize: '16px',\n    fontWeight: \"600\",\n    // position: 'relative',\n    // margin: '0'\n  },\n\n  aboutmeoftext: {\n    color: \"green\",\n    lineHeight: \"22px\",\n    whiteSpace: \"pre-line\",\n  },\n  // End of About me\n  // Skills\n  skill: {\n    borderRadius: \"8px\",\n    padding: \"20px\",\n    backgroundColor: \"#eee\",\n    minHeight: \"150px\",\n    height: \"100px\",\n  },\n\n  skill_title: {\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    lineHeight: \"30px\",\n  },\n\n  skill_description: {\n    display: \"flex\",\n    alignItems: \"center\",\n    color: \"green\",\n    fontWeight: \"300\",\n    lineHeight: \"15px\",\n  },\n\n  timeline_dot: {\n    borderColor: \"yellow\",\n    padding: \"2px\",\n    marginRight: \"5px\",\n  },\n  // End of Skills\n  // Services\n\n  _div: {\n    // backgroundColor: '#eee',\n    // padding: '5px 10px 5px 10px'\n    marginLeft: \"0\",\n  },\n  service: {\n    height: \"100%\",\n    textAlign: \"center\",\n  },\n  service_title: {\n    fontSize: \"16px\",\n    fontWeight: \"500\",\n    lineHeight: \"30px\",\n    textAlign: \"center\",\n  },\n  service_description: {\n    color: \"green\", //'#989898',\n    // borderColor: 'yellow',\n    // marginRight: '5px',\n    textAlign: \"center\",\n  },\n  service_icon: {\n    fontSize: \"33px\",\n    marginLeft: \"0\",\n    paddingLeft: \"80px\",\n    fontWeight: \"300\",\n    color: \"black\",\n  },\n\n  // End of Services\n  // Contacts\n  // contactInfo_item: {\n  //   fontSize: \"13px\",\n  //   color: \"#787878\",\n  //   lineHeight: '9px'\n  // },\n\n  // span: {\n  //   color: 'black',\n  //   fontWeight: '500'\n  // },\n\n  // // contactInfo_container: {\n  // //   marginTop: \"15px\"\n  // // },\n\n  // contactInfo_icon: {\n  //   // marginTop: \"15px\",\n  //   marginRight: \"3px\",\n  //   fontSize: '40.5px',\n  //   color: 'lightblue'\n  // }\n\n  // End of Contacts\n}));\n\nconst Resume = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      {/* About me */}\n      <Grid container className=\"section pb_45 pt_45\">\n        <Grid item className=\"section_title mb_30\">\n          <span></span>\n          <h6 className={classes.aboutmetext}>About me</h6>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"body2\" className={classes.aboutmeoftext}>\n            {resumeData.about}\n          </Typography>\n        </Grid>\n      </Grid>\n\n      {/* Education and Experience */}\n      <Grid container className=\"section\">\n        <Grid item className=\"section_title\" style={{marginBottom: \"40px\"}}>\n          <span></span>\n          <h6 className=\"section_title_text\">Resume</h6>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Grid container>\n            {/* Experiences */}\n            <Grid item sm={12} md={6}>\n              <CustomTimeline title=\"Work Experience\" icon={<WorkIcon />}>\n                {resumeData.experiences.map((experience) => (\n                  <TimelineItem>\n                    <CustomTimelineSeparator />\n                    <TimelineContent>\n                      <Typography>\n                        {experience.title}\n                      </Typography>\n                      <Typography>\n                        {experience.date}\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        className=\"\">\n                        {experience.description}\n                      </Typography>\n                    </TimelineContent>\n                  </TimelineItem>\n                ))}\n              </CustomTimeline>\n            </Grid>\n            {/* Education */}\n            <Grid item sm={12} md={6}>\n              <CustomTimeline title=\"Education\" icon={<SchoolICon />}>\n                {resumeData.education.map((edu) => (\n                  <TimelineItem>\n                    <CustomTimelineSeparator />\n                    <TimelineContent>\n                      <Typography>\n                        {edu.title}\n                      </Typography>\n                      <Typography>\n                        {edu.date}\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        className=\"\">\n                        {edu.description}\n                      </Typography>\n                    </TimelineContent>\n                  </TimelineItem>\n                ))}\n              </CustomTimeline>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      {/* Services */}\n      <Grid container className=\"section pb_45\">\n        <Grid item className=\"section_title mb_30\">\n          <span></span>\n          <h6 className=\"section_title_text\">Services</h6>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Grid container spacing={3} justify=\"space-around\">\n            {resumeData.services.map((service) => (\n              <Grid item xs={12} sm={6} md={3}>\n                <div className={classes._div}>\n                  <Icon className={classes.service_icon}>{service.icon}</Icon>\n                  <Typography className={classes.service_title} variant=\"h6\">\n                    {service.title}\n                  </Typography>\n                  <Typography\n                    className={classes.service_description}\n                    variant=\"body2\"\n                  >\n                    {service.description}\n                  </Typography>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n\n      {/* Skills */}\n      <Grid container className=\"section_graybg pb_45 p_50\">\n        <Grid item className=\"section_title mb_30\">\n          <span></span>\n          <h6 className=\"section_title_text\">Tech stack</h6>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Grid container spacing={3} justify=\"space-between\">\n            {resumeData.skills.map((skill) => (\n              <Grid item xs={12} sm={6} md={3}>\n                <Paper className={classes.skill} elevation={0}>\n                  <Typography variant=\"h6\" className={classes.skill_title}>\n                    {skill.title}\n                  </Typography>\n                  {skill.description.map((element) => (\n                    <Typography\n                      variant=\"body2\"\n                      className={classes.skill_description}\n                    >\n                      <TimelineDot\n                        variant=\"outlined\"\n                        className={classes.timeline_dot}\n                      />\n                      {element}\n                    </Typography>\n                  ))}\n                </Paper>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n\n      \n    </>\n  );\n};\n\nexport default Resume;\n",["55","56"],"/home/admin1/Desktop/my-app/src/pages/Portfolio/Portfolio.js",["57","58","59","60","61","62","63"],"/home/admin1/Desktop/my-app/src/index.js",[],"/home/admin1/Desktop/my-app/src/pages/Contact/Contact.js",["64","65"],"import { Grid, Icon, Paper, Typography, TextField } from \"@material-ui/core\";\nimport React from \"react\";\n\nimport CustomButton from \"../../components/Button/Button\";\n\nimport resumeData from \"../../utils/resumeData\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  // Contact\n\n  contactInfo_item: {\n    fontSize: \"13px\",\n    color: \"#787878\",\n    lineHeight: '9px'\n  },\n\n  span: {\n    color: 'black',\n    fontWeight: '500'\n  },\n\n  // contactInfo_container: {\n  //   marginTop: \"15px\"\n  // },\n\n  contactInfo_icon: {\n    // marginTop: \"15px\",\n    marginRight: \"3px\",\n    fontSize: '40.5px',\n    color: 'lightblue'\n  }\n\n  // End of Contacts\n}));\n\nconst Contact = () => {\n    const classes = useStyles();\n\n    return (\n        \n        //Contact\n      <Grid container spacing={10} className=\"section pt_45 pb_45\">\n      {/* Contact form */}\n      <Grid item xs={12} lg={7}>\n        <Grid container>\n          <Grid item className=\"section_title mb_30\">\n            <span></span>\n            <h6 classname=\"section_title_text\">Contact Form</h6>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField fullWidth name=\"name\" label=\"Name\" />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField fullWidth name=\"email\" label=\"Email\" />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  name=\"Message\"\n                  label=\"Message\"\n                  multiline rows={4}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <CustomButton text=\"Submit\"></CustomButton>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      {/* Contact information */}\n      <Grid item xs={12} lg={5}>\n        <Grid container>\n          <Grid item className=\"section_title mb_30\">\n            <span></span>\n            <h6 className=\"section_title_text\">Contact Information</h6>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography className={classes.contactInfo_item}>\n                  <span className={classes.span}>Address:</span> {resumeData.address}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                  <Typography className={classes.contactInfo_item}>\n                    <span className={classes.span}>Phone:</span> {resumeData.phone}\n                  </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                  <Typography className={classes.contactInfo_item}>\n                    <span className={classes.span}>Email:</span> {resumeData.email}\n                  </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        \n\n          <Grid item xs={12}>\n            <Grid container className=\"\">\n              {Object.keys(resumeData.socials).map((key) => (\n                <Grid item className=\"\">\n                  {/* <a href={resumeData.socials[key].link}></a> */}\n                  <span className={classes.contactInfo_icon}>\n                    {resumeData.socials[key].icon}\n                  </span>\n                </Grid>\n              ))}\n            </Grid>\n          </Grid>\n\n        </Grid>\n      </Grid>\n\n    </Grid>\n \n   );\n};\n\n\nexport default Contact;","/home/admin1/Desktop/my-app/src/pages/Home/index.js",[],"/home/admin1/Desktop/my-app/src/utils/resumeData.js",["66","67","68","69","70","71","72","73","74","75","76","77"],{"ruleId":"78","severity":1,"message":"79","line":82,"column":9,"nodeType":"80","messageId":"81","endLine":82,"endColumn":16},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"78","severity":1,"message":"86","line":1,"column":41,"nodeType":"80","messageId":"81","endLine":1,"endColumn":50},{"ruleId":"82","replacedBy":"87"},{"ruleId":"84","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":62,"column":24,"nodeType":"91","messageId":"92","endLine":62,"endColumn":26},{"ruleId":"89","severity":1,"message":"90","line":71,"column":28,"nodeType":"91","messageId":"92","endLine":71,"endColumn":30},{"ruleId":"89","severity":1,"message":"90","line":85,"column":25,"nodeType":"91","messageId":"92","endLine":85,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":85,"column":52,"nodeType":"91","messageId":"92","endLine":85,"endColumn":54},{"ruleId":"93","severity":1,"message":"94","line":128,"column":35,"nodeType":"95","endLine":128,"endColumn":50},{"ruleId":"96","severity":1,"message":"97","line":141,"column":1,"nodeType":"98","messageId":"99","endLine":143,"endColumn":2},{"ruleId":"96","severity":1,"message":"97","line":144,"column":1,"nodeType":"98","messageId":"99","endLine":168,"endColumn":2},{"ruleId":"78","severity":1,"message":"100","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":20},{"ruleId":"78","severity":1,"message":"101","line":1,"column":22,"nodeType":"80","messageId":"81","endLine":1,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":134,"column":11,"nodeType":"104","messageId":"92","endLine":134,"endColumn":15},{"ruleId":"102","severity":1,"message":"105","line":134,"column":58,"nodeType":"104","messageId":"92","endLine":134,"endColumn":62},{"ruleId":"102","severity":1,"message":"103","line":135,"column":11,"nodeType":"104","messageId":"92","endLine":135,"endColumn":15},{"ruleId":"102","severity":1,"message":"105","line":135,"column":58,"nodeType":"104","messageId":"92","endLine":135,"endColumn":62},{"ruleId":"102","severity":1,"message":"103","line":148,"column":11,"nodeType":"104","messageId":"92","endLine":148,"endColumn":15},{"ruleId":"102","severity":1,"message":"105","line":148,"column":43,"nodeType":"104","messageId":"92","endLine":148,"endColumn":47},{"ruleId":"102","severity":1,"message":"103","line":149,"column":11,"nodeType":"104","messageId":"92","endLine":149,"endColumn":15},{"ruleId":"102","severity":1,"message":"105","line":149,"column":43,"nodeType":"104","messageId":"92","endLine":149,"endColumn":47},{"ruleId":"102","severity":1,"message":"103","line":162,"column":11,"nodeType":"104","messageId":"92","endLine":162,"endColumn":15},{"ruleId":"102","severity":1,"message":"105","line":162,"column":43,"nodeType":"104","messageId":"92","endLine":162,"endColumn":47},{"ruleId":"102","severity":1,"message":"103","line":163,"column":11,"nodeType":"104","messageId":"92","endLine":163,"endColumn":15},{"ruleId":"102","severity":1,"message":"105","line":163,"column":43,"nodeType":"104","messageId":"92","endLine":163,"endColumn":47},"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["106"],"no-negated-in-lhs",["107"],"'TextField' is defined but never used.",["106"],["107"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Icon' is defined but never used.","'Paper' is defined but never used.","no-dupe-keys","Duplicate key 'link'.","ObjectExpression","Duplicate key 'icon'.","no-global-assign","no-unsafe-negation"]